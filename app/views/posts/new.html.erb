<div class="NewContents", style="background-image: url(<%= asset_path "mytown.jpeg" %>);">
<<<<<<< Updated upstream
  <div class="Container">
    <%= form_with(model: @post, local: true, class:"Form") do |form| %>
      <h3 class='NewContentsMessage'>
        投稿する
      </h3>
      <div class='FormArea'>
        <ul class='FormSpace'>
          <li class="PrefectureSelect">
            <label for="prefucture">Prefecture：</label>
            <%= form.collection_select :prefucture, Prefecture.all, :id, :name, include_blank: '選択してください' %>
          </li>
          <%# <li class="CategorySelect"> %>
            <%# <label for="category">Category：</label> %>
            <%# <%= form.collection_select :category_id, Category.all, :id, :name %>
          <%# </li> %>
          <li class="title">
            <label for="titleSpace">Title：</label>
            <%= form.text_field :title, class: 'titles', placeholder: "タイトルを入力してください" %>
          </li>
          <li class='image'>
            <label for="imageSpace">Photo：</label>
            <%= form.text_field :image, class: 'images', placeholder: "写真のURLを貼ってください" %>
          </li>
          <li class='content'>
            <label for="contentSpace">Content：</label>
            <%= form.text_area :content, class: 'contents', placeholder: "コメントを入力してください" %>
          </li>
          <li class='send'>
            <%= form.submit "SEND", class: 'sendBtn', value: "投稿" %>
            <img src="https://www.dropbox.com/s/qfu4871umzhlcfo/check_arrow_2.svg?dl=1" alt="">
            <svg width="66px" height="66px">
              <circle class="circle_2" stroke-position="outside" stroke-width="3" fill="none" cx="34" cy="33" r="29" stroke="#1ECD97">
              </circle>
            </svg>
          </li>
        </ul>
      </div>
    <% end %>
=======
  <h3 class='NewContents__message'>
    New Post
  </h3>
  <div class="NewContents__container">
    <%= render 'form', post: @post %>
>>>>>>> Stashed changes
  </div>
</div>
<style>
#map{
  height: 500px;
  width: 500px;
}
</style>


<script>

  let map
  let geocoder
  let marker

  function initMap() {
    geocoder = new google.maps.Geocoder()

    mapInstance = new google.maps.Map(document.getElementById('map'), {
      center: {
        lat: 35.6807527,
        lng: 139.7670716
      },
      zoom: 17
    });
  }

  function codeAddress() {
    let inputAddress = document.getElementById('address').value;

    geocoder.geocode({
      'address': inputAddress
    }, function (results, status) {
      if (status == 'OK') {
        mapInstance.setCenter(results[0].geometry.location);

        if(marker != null){
        marker.setMap(null);
        }
        marker = null;

        marker = new google.maps.Marker({
          //map→mapInstanceに変更
          map: mapInstance,
          position: results[0].geometry.location
        });

        // google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
        // google.maps.Markerインスタンスを生成
        let maptitle = document.getElementById('map_maptitle');
        maptitle.setAttribute("value", inputAddress);

        let hidden_address = document.getElementById('hidden_address');
        hidden_address.setAttribute("value", inputAddress);
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDmv1pwJDbQBm2zCU5YOV2hNw41U5zjjsU&callback=initMap" async defer>
</script>